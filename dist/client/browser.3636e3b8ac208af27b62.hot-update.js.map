{"version":3,"sources":["webpack:///./packages/src/context/app.context.tsx","webpack:///./packages/src/context/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACO,IAAM,UAAU,GAAG,oDAAoB,EAApB,CAAnB;AAEA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAW;AAC9B;AAAA,MAAC,aAAD;AAAA,MAAQ,gBAAR;;AAIN,SACE,oDAAC,UAAU,CAAC,QAAZ,EAAoB;AAAC,SAAK,EAAE;AAAE,WAAK,OAAP;AAAS,cAAQ;AAAjB;AAAR,GAApB,EACG,KAAK,CAAC,QADT,CADF;AAKD,CAVM;AAWA,IAAM,aAAa,GAAG,SAAhB,aAAgB;AACrB;AAAA,MAAE,gBAAF;AAAA,MAAS,sBAAT;;AACN,MAAM,OAAO,GAAG,EAAhB;AACA,SAAO,CAAC,KAAD,EAAQ,OAAR,CAAP;AACD,CAJM,C;;;;;;;;;;;;ACfP;AAAA;AAAA;AAAA;AAAA;AAAA","file":"browser.3636e3b8ac208af27b62.hot-update.js","sourcesContent":["import * as React from 'react';\nimport appState from './app.reducer';\nexport const AppContext = React.createContext({});\n\nexport const AppProvider = (props: any) => {\n  const [state, dispatch] = React.useReducer(\n    appState,\n    props.defaultState || {}\n  );\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\nexport const useAppContext = () => {\n  const { state, dispatch } = React.useContext(AppContext);\n  const actions = {};\n  return [state, actions];\n};\n","export { AppProvider, AppContext } from './app.context';\n"],"sourceRoot":""}