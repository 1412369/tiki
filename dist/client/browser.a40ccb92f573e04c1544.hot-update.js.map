{"version":3,"sources":["webpack:///./packages/src/index.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAM,SAAS,GAAmB,SAA5B,SAA4B;AAChC,SACE,oDAAC,8DAAD,EAAc,IAAd,EACE,oDAAC,wDAAD,EAAY;AAAC,gBAAY,EAAE,MAAM,CAAC,YAAP,IAAuB;AAAtC,GAAZ,EACE,oDAAC,+CAAD,EAAI,IAAJ,CADF,CADF,CADF;AAOD,CARD;;AASA,yEAAa,CAAC;AACZ,2DAAO,CAAC,oDAAC,SAAD,EAAU,IAAV,CAAD,EAAgB,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAhB,CAAP;AACD,CAFY,CAAb;;AAGA,IAAI,wCAAI,CAAC,QAAL,KAAkB,aAAlB,IAAmC,MAAM,CAAC,GAA9C,EAAmD;AACjD,WAAc,MAAM,CAAC,GAAP,CAAW,MAAX,EAAd;AACD,C","file":"browser.a40ccb92f573e04c1544.hot-update.js","sourcesContent":["import { BrowserRouter } from 'react-router-dom';\nimport { hydrate } from 'react-dom';\nimport { loadableReady } from '@loadable/component';\nimport * as React from 'react';\nimport { AppProvider } from '@src/context';\nimport App from './routes';\ndeclare var ENVS: any;\ndeclare var window: any;\nconst ClientApp: React.SFC<any> = () => {\n  return (\n    <BrowserRouter>\n      <AppProvider defaultState={window.defaultState || {}}>\n        <App />\n      </AppProvider>\n    </BrowserRouter>\n  );\n};\nloadableReady(() => {\n  hydrate(<ClientApp />, document.getElementById('app'));\n});\nif (ENVS.NODE_ENV === 'development' && module.hot) {\n  module.hot && module.hot.accept();\n}\n"],"sourceRoot":""}