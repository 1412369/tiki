{"version":3,"sources":["webpack:///./packages/src/context/app.context.tsx","webpack:///./packages/src/context/app.reducer.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEO,IAAM,UAAU,GAAG,oDAAyB,EAAzB,CAAnB;AAEA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAW;AAC9B;AAAA,MAAC,aAAD;AAAA,MAAQ,gBAAR;;AAIN,SACE,oDAAC,UAAU,CAAC,QAAZ,EAAoB;AAAC,SAAK,EAAE;AAAE,WAAK,OAAP;AAAS,cAAQ;AAAjB;AAAR,GAApB,EACG,KAAK,CAAC,QADT,CADF;AAKD,CAVM;AAYA,IAAM,aAAa,GAAG,SAAhB,aAAgB;AACrB;AAAA,MAAE,gBAAF;AAAA,MAAS,sBAAT;;AACN,MAAM,OAAO,GAAG;AACd,gBAAY,EAAE,sBAAC,OAAD,EAAa;AACzB,qBAAQ,CAAC;AAAE,YAAI,EAAE,mDAAQ,CAAC,aAAjB;AAAgC,eAAO;AAAvC,OAAD,CAAR;AAAmD;AAFvC,GAAhB;AAIA,SAAO,CAAC,KAAD,EAAQ,OAAR,CAAP;AACD,CAPM,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBP;AACc,yEAAU,KAAV,EAAsB,MAAtB,EAAiC;AAC7C,MAAI,MAAM,CAAC,IAAP,KAAgB,mDAAQ,CAAC,aAA7B,EAA4C;AAC1C,QAAM,SAAO,kBAAO,KAAK,CAAC,OAAb,CAAb;;AACA,UAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAC,IAAD,EAAa;AAC5B;AAAA,UAAC,SAAD;AAAA,UAAI,SAAJ;;AACN,eAAO,CAAC,CAAD,CAAP,CAAW,CAAX,IAAa,sBAAQ,SAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAR,GAAqB;AAAE,gBAAQ,EAAE;AAAZ,OAArB,CAAb;AACD,KAHD;AAIA,iCAAY,KAAZ,GAAiB;AAAE,aAAO;AAAT,KAAjB;AACD;;AACD,SAAO,KAAP;AACD,C","file":"browser.56080bc75ff93f84d57f.hot-update.js","sourcesContent":["import * as React from 'react';\n\nimport { appEnums } from './app.types';\nimport appState from './app.reducer';\n\nexport const AppContext = React.createContext<any>({});\n\nexport const AppProvider = (props: any) => {\n  const [state, dispatch] = React.useReducer(\n    appState,\n    props.defaultState || {}\n  );\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => {\n  const { state, dispatch } = React.useContext(AppContext);\n  const actions = {\n    applyTickets: (payload: any) =>\n      dispatch({ type: appEnums.APPLY_TICKETS, payload }),\n  };\n  return [state, actions];\n};\n","import { appEnums } from './app.types';\nexport default function(state: any, action: any) {\n  if (action.type === appEnums.APPLY_TICKETS) {\n    const tickets = [...state.tickets];\n    action.payload.forEach((item: string) => {\n      const [i, j] = item.split('_');\n      tickets[i][j] = { ...tickets[i][j], isPicked: true };\n    });\n    return { ...state, tickets };\n  }\n  return state;\n}\n"],"sourceRoot":""}