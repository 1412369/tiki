{"version":3,"sources":["webpack:///./packages/src/routes/home/childs/index.ts","webpack:///./packages/src/routes/home/childs/tickets/tickets.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;;AAMA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,KAAD,EAAqB;AACnC,SACE,oDAAC,wDAAD,EAAU;AAAC,SAAK,EAAE;AAAR,GAAV,EACG,OAAO,CAAC,GAAR,CAAY,UAAC,IAAD,EAAY,QAAZ,EAA4B;AACvC,QAAM,OAAO,GAAW,MAAM,CAAC,YAAP,CAAoB,KAAK,QAAzB,CAAxB;AACA,WACE,oDAAC,kDAAD,EAAI;AAAC,SAAG,EAAE,QAAQ;AAAd,KAAJ,EACE,kEAAO,OAAP,CADF,EAEG,IAAI,CAAC,GAAL,CAAS,UAAC,KAAD,EAAa,QAAb,EAA6B;AACrC,UAAI,KAAK,CAAC,QAAV,EAAoB;AAClB,eAAO,oDAAC,wDAAD,EAAU;AAAC,eAAK,EAAE;AAAR,SAAV,CAAP;AACD;;AACD,aACE,oDAAC,kDAAD,EAAI;AACF,WAAG,EAAE,QAAQ,QADX;AAEF,eAAO,EAAE;AAAM,+BAAc,CAAC,QAAD,EAAd,QAAc,CAAd;AAAkC,SAF/C;AAGF,aAAK,EAAE,KAHL;AAIF,YAAI,EAAE,KAAK,CAAC,IAJV;AAKF,gBAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAT,CAAoB,QAAQ,MAAR,GAAY,QAAhC;AALV,OAAJ,EAMG,CAAC,CAAC,QAAQ,CAAC,OAAT,CAAoB,QAAQ,MAAR,GAAY,QAAhC,CAAF,GACM,OAAO,MAAP,IAAW,QAAQ,GAAG,CAAtB,CADN,GAEG,EARN,CADF;AAYD,KAhBA,CAFH,CADF;AAsBD,GAxBA,CADH,CADF;AA6BD,CA9BD;;AA+Be,sEAAf,E","file":"home-home.b49651621144d30246e6.hot-update.js","sourcesContent":["export { default as PayAction } from './payAction/payAction';\nexport { default as PayInfo } from './payInfo/payInfo';\nexport { default as ScaleButton } from './scale/scale';\nexport { default as Tickets } from './tickets/tickets';\nexport { default as Status } from './status/status';\n","import * as React from 'react';\nimport { Container, Col, Row, ColPicked } from './ticket.styled';\n\ntype ITicketsProps = {\n  scale: boolean;\n  tickets: any[];\n};\nconst Tickets = (props: ITicketsProps) => {\n  return (\n    <Container scale={scale}>\n      {tickets.map((item: any, rowIndex: number) => {\n        const seatRow: string = String.fromCharCode(65 + rowIndex);\n        return (\n          <Row key={'row' + rowIndex}>\n            <span>{seatRow}</span>\n            {item.map((_item: any, colIndex: number) => {\n              if (_item.isPicked) {\n                return <ColPicked scale={scale} />;\n              }\n              return (\n                <Col\n                  key={'col' + colIndex}\n                  onClick={() => onTicketSelect(rowIndex, colIndex)}\n                  scale={scale}\n                  type={_item.type}\n                  selected={!!selected.tickets[`${rowIndex}_${colIndex}`]}>\n                  {!!selected.tickets[`${rowIndex}_${colIndex}`]\n                    ? `${seatRow} ${colIndex + 1}`\n                    : ''}\n                </Col>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </Container>\n  );\n};\nexport default Tickets;\n"],"sourceRoot":""}